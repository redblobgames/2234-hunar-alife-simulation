#+title: Hunar Alife Simulation
#+date: <2022-08-27 Sat>

I really enjoyed [[https://www.youtube.com/watch?v=0Kx4Y9TVMGg][Hunar's video about a simple particle simulation]] and wanted to follow their instructions to recreate it.

#+begin_export html
<figure class="w-full">
  <canvas id="output" width="1000" height="1000" />
  <figcaption>Particle simulation</figcaption>
  <button onclick="randomParameters()" ondblclick="randomParameters()">Randomize</button>
  <div>
  <div class="inline-block"><div id="matrix"/></div>
  <div class="inline-block"><div id="sliders"/></div>
  </div>
</figure>
#+end_export

Thoughts about Hunar's video:

- It's *joyful*. I watched it without thinking about "should it be =let= or =const=?" or "should it be a typed array?" or "what is the right module structure" or "what is the best way to set up the build system?" It gets right to the point — let's implement a simulation!
- It simulates forces that are /independent of distance/ but have a distance limit. I think the closest force we have to that is the [[https://en.wikipedia.org/wiki/Strong_interaction#Behavior_of_the_strong_force][Strong force]], which is for the quarks inside an atom nucleus. If the goal is artificial life simulation, I'd want to use some force that depends on distance, like 1/d² (gravity, electromagnetism in a 3d world), 1/d (gravity or electromagnetism in a 2d world), [[https://en.wikipedia.org/wiki/Van_der_Waals_force#Van_der_Waals_forces_between_macroscopic_objects][Van der Waals forces]] which can take into account the size of the particles, or [[https://en.wikipedia.org/wiki/Lennard-Jones_potential][Lennard-Jones]] which is the force between molecules. The interesting thing with Lennard-Jones is that at close distances it pushes molecules apart and at far distances it pulls them closer. This can create really interesting patterns. There is also a generalization of Lennard-Jones called [[https://en.wikipedia.org/wiki/Mie_potential][Mie potential]] that might be useful for adapting Lennard-Jones for use in 2d. [[[https://github.com/hunar4321/life_code/issues/20][github issue]]]
- Since the forces are independent of distance, what's really happening is that all the particles are moving towards (or away from) the center of mass of the other particles. If it weren't for the distance limit, this would allow us to reduce an O(N²) algorithm with an O(N) algorithm — first compute the center of mass, then tell all the particles to move towards it. But with the distance limit, we're looking for the center of mass of nearby particles. *This is similar to flocking* rather than atomic forces.
- The simulation writes into the input array instead of having a separate output array (double buffering), which means the order of the particles affects the output. This is ok with small timesteps but this simulation uses large timesteps. [[[https://github.com/hunar4321/life_code/issues/18][github issue]]]
- The bounds checking is insufficient for keeping particles inside the box. I fixed this in my code. [[[https://github.com/hunar4321/life_code/issues/4][github issue]]]
- The Euler integration is unstable, and the time steps are too large. I considered fixing these, but I think some of the cool effects are really simulation artifacts and not the results of the physics, so fixing them would make it less fun!

Despite these issues, it's so *joyful* that I had a lot of fun playing with this. It's a great introduction to this type of particle simulation!

#+begin_export html
<style>
  .inline-block { display: inline-block; vertical-align: top; }
  #sliders { text-align: left; }
  #matrix { display: grid; grid-template-columns: 4em repeat(4, 3em); grid-template-rows: 1.5em repeat(4, 3em); }
  #matrix input[type=number] {
    padding: 0.5em;
    -moz-appearance: textfield;
  }
  #matrix input[type=number]::-webkit-inner-spin-button {
    -webkit-appearance: none;
  }
  label { display: grid; grid-template-columns: 10em 1fr 3em; }
  label span, output { font-family: monospace; text-align: right; }
</style>

<x:footer>
  <script src="hunar-alife-simulation.js"></script>
  <script src="draw-webgl.js"></script>

  Created 27 Aug 2022; &#160;
  <!-- hhmts start -->Last modified: 31 Aug 2022<!-- hhmts end -->
</x:footer>
#+end_export
